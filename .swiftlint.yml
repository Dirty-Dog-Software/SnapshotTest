#
#  DDS SwiftLint Customizations
#
#  Created by Gayle Dunham on 7/6/19.
#  Copyright Â© 2019 Dirty Dog Software, LLC. All rights reserved.
#
# Reference:
#   https://github.com/realm/SwiftLint
#   https://github.com/realm/SwiftLint/blob/master/Rules.md
#   https://dirtydogsoftware.atlassian.net/wiki/display/DT/Swift+Lint?src=contextnavpagetreemode
#   https://www.avanderlee.com/optimization/swiftlint-optin-rules/


# rule identifiers to exclude from running
disabled_rules:
    - trailing_comma       # I believe in trailing commas when building lists of things
    - opening_brace

# some rules are only opt-in
opt_in_rules:
    - empty_count                        # https://github.com/realm/SwiftLint/blob/master/Rules.md#empty-count
    - empty_string
    - explicit_enum_raw_value
    - discouraged_object_literal
    - required_enum_case
    - toggle_bool
    - convenience_type
    - fatal_error_message
    - file_name
    - first_where
    - modifier_order
    - private_action
    - private_outlet
    - unused_private_declaration
    - overridden_super_call
    - unavailable_function
    - joined_default_parameter
    - identical_operands
    - fallthrough
    - empty_parentheses_with_trailing_closure
    - multiple_closures_with_trailing_closure
    - multiline_function_chains
#    - missing_docs

# configurable rules can be customized from this configuration file
line_length: 200
function_body_length: 60

# parameterized rules are first parameterized as a warning level, then error level.
type_body_length:
    - 400 # warning
    - 500 # error

colon:
    flexible_right_spacing: true

identifier_name:
    excluded: # excluded via string array
        - _model
        - _systemVersion
        - createDirectoryCreateIntermediariesArgument

# ------------------------------------------------------------------------------------------------
#   Autocorrect
# ------------------------------------------------------------------------------------------------
# To clean a bunch of trailing_whitespace or trailing_newline run the following on the command-line
#   `swiftlint autocorrect`

# ------------------------------------------------------------------------------------------------
#   Installation
# ------------------------------------------------------------------------------------------------
#
#   Add "Run Script Build Phase" just before the compile step
#
#   if which swiftlint >/dev/null; then
#       swiftlint
#   else
#       echo "SwiftLint does not exist, download from https://github.com/realm/SwiftLint"
#   fi
#

